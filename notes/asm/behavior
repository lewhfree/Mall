1000:0000 - CLI			- Turns off hardware interupts
1000:0001 - PUSH SS		- Puts the "stack pointer" on the stack - in this case it is 0x0009
1000:0002 - POP DS		- Sets the "data section pointer" to the "stack pointer" and pop it off the stack
				- SS and DS are now pointing to the same thing, 0x09
1000:0003 - MOV AX,ES:[0x2]	- Sets AX to the PSP:0x2, which is 0x0080
				- ES and DS are set to PSP when the program starts executing. AX contains 0x0080 
1000:0007 - SUB AX,0x40		- Sets AX to AX - 0x40. Sets AX to (ES:0002) - 0x40, AX now contains 0x0040
1000:000A - MOV SS,AX		- Sets SS to AX - SS is 0x0040, AX is 0x0040, DS is 0x0009, ES is still PSP
1000:000C - STI			- Turns  on hardware interupts, see 1000:0000
1000:000D - PUSH ES		- Pushes ES to the Stack
1000:000E - PUSH SS		- Pushes SS to the stack
1000:000F - POP ES		- Pop ES off the stack. ES is now = SS and = 0x0040
1000:0010 - MOV SI,0x3F0	- Source index set to 0x3F0
1000:0013 - MOV DI,SI		- Destination index set to SI and 0x3F0
1000:0015 - MOV CX,0x10		- Sets Counter CX to 0x10, so future counters will do 16 rounds till cx=0x00
1000:0018 - REP MOVSB ES:DI,SI	- 16 * (Move one byte of DS:SI (0009:03F0) to ES:DI (0040:03F0), inc SI and DI, dec CX) (Go until CX=0x00)
1000:001a - POP ES		- Sets ES to ES from before 1000:000D.
1000:001b - MOV SS:[0x3fc],ES	- 
